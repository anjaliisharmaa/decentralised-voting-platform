{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\voting-dapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AptosClient, AptosAccount, BCS, TxnBuilderTypes, HexString } from 'aptos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState('');\n  const connectWallet = async () => {\n    if (!window.aptos) {\n      alert('Please install an Aptos wallet!');\n      return;\n    }\n    try {\n      const {\n        address\n      } = await window.aptos.connect();\n      setWalletAddress(address);\n    } catch (error) {\n      console.error(\"Wallet connection error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Decentralized Voting Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), walletAddress ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected Wallet: \", walletAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"SM6J6Jv3vxLi47+RieKFbfI3nq0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AptosClient","AptosAccount","BCS","TxnBuilderTypes","HexString","jsxDEV","_jsxDEV","App","_s","walletAddress","setWalletAddress","connectWallet","window","aptos","alert","address","connect","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anjal/voting-dapp/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { AptosClient, AptosAccount, BCS, TxnBuilderTypes, HexString } from 'aptos';\n\nfunction App() {\n    const [walletAddress, setWalletAddress] = useState('');\n\n    const connectWallet = async () => {\n        if (!window.aptos) {\n            alert('Please install an Aptos wallet!');\n            return;\n        }\n\n        try {\n            const { address } = await window.aptos.connect();\n            setWalletAddress(address);\n        } catch (error) {\n            console.error(\"Wallet connection error:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Decentralized Voting Platform</h1>\n            {walletAddress ? (\n                <p>Connected Wallet: {walletAddress}</p>\n            ) : (\n                <button onClick={connectWallet}>Connect Wallet</button>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,YAAY,EAAEC,GAAG,EAAEC,eAAe,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACC,MAAM,CAACC,KAAK,EAAE;MACfC,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACJ;IAEA,IAAI;MACA,MAAM;QAAEC;MAAQ,CAAC,GAAG,MAAMH,MAAM,CAACC,KAAK,CAACG,OAAO,CAAC,CAAC;MAChDN,gBAAgB,CAACK,OAAO,CAAC;IAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,oBACIX,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrCd,aAAa,gBACVH,OAAA;MAAAa,QAAA,GAAG,oBAAkB,EAACV,aAAa;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAExCjB,OAAA;MAAQkB,OAAO,EAAEb,aAAc;MAAAQ,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACf,EAAA,CA3BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}