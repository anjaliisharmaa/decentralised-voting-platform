{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\voting-dapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// Check if Martian Wallet is available\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst checkForMartianWallet = () => {\n  return !!window.martian;\n};\nconst App = () => {\n  _s();\n  const [walletAddress, setWalletAddress] = useState('');\n  const [voteOptions, setVoteOptions] = useState([{\n    id: 1,\n    name: 'Option 1',\n    votes: 0\n  }, {\n    id: 2,\n    name: 'Option 2',\n    votes: 0\n  }, {\n    id: 3,\n    name: 'Option 3',\n    votes: 0\n  }]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const connectWallet = async () => {\n    if (checkForMartianWallet()) {\n      const account = await window.martian.connect();\n      setWalletAddress(account.address);\n    } else {\n      alert(\"Please install Martian Wallet to connect.\");\n    }\n  };\n  const handleVote = id => {\n    // Update votes for the selected option\n    setVoteOptions(prevOptions => prevOptions.map(option => option.id === id ? {\n      ...option,\n      votes: option.votes + 1\n    } : option));\n    setSelectedOption(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Decentralized Voting Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), walletAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected Wallet: \", walletAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Voting Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: voteOptions.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [option.name, \" - Votes: \", option.votes, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleVote(option.id),\n          children: \"Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, option.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), selectedOption && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Thank you for voting for \", voteOptions.find(option => option.id === selectedOption).name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"jrGMeuglLRvjTLS5atWARJcWUSw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","checkForMartianWallet","window","martian","App","_s","walletAddress","setWalletAddress","voteOptions","setVoteOptions","id","name","votes","selectedOption","setSelectedOption","connectWallet","account","connect","address","alert","handleVote","prevOptions","map","option","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","find","_c","$RefreshReg$"],"sources":["C:/Users/anjal/voting-dapp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// Check if Martian Wallet is available\nconst checkForMartianWallet = () => {\n    return !!window.martian;\n};\n\nconst App = () => {\n    const [walletAddress, setWalletAddress] = useState('');\n    const [voteOptions, setVoteOptions] = useState([\n        { id: 1, name: 'Option 1', votes: 0 },\n        { id: 2, name: 'Option 2', votes: 0 },\n        { id: 3, name: 'Option 3', votes: 0 },\n    ]);\n    const [selectedOption, setSelectedOption] = useState(null);\n\n    const connectWallet = async () => {\n        if (checkForMartianWallet()) {\n            const account = await window.martian.connect();\n            setWalletAddress(account.address);\n        } else {\n            alert(\"Please install Martian Wallet to connect.\");\n        }\n    };\n\n    const handleVote = (id) => {\n        // Update votes for the selected option\n        setVoteOptions(prevOptions =>\n            prevOptions.map(option =>\n                option.id === id ? { ...option, votes: option.votes + 1 } : option\n            )\n        );\n        setSelectedOption(id);\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Decentralized Voting Platform</h1>\n            <button onClick={connectWallet}>Connect Wallet</button>\n            {walletAddress && <p>Connected Wallet: {walletAddress}</p>}\n            \n            <h2>Voting Options</h2>\n            <ul>\n                {voteOptions.map(option => (\n                    <li key={option.id}>\n                        {option.name} - Votes: {option.votes}\n                        <button onClick={() => handleVote(option.id)}>Vote</button>\n                    </li>\n                ))}\n            </ul>\n\n            {selectedOption && <p>Thank you for voting for {voteOptions.find(option => option.id === selectedOption).name}!</p>}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}