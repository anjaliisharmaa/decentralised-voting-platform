{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\voting-dapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// Check if Martian Wallet is available\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst checkForMartianWallet = () => {\n  return !!window.martian;\n};\nconst App = () => {\n  _s();\n  const [walletAddress, setWalletAddress] = useState('');\n  const connectWallet = async () => {\n    if (checkForMartianWallet()) {\n      const account = await window.martian.connect();\n      setWalletAddress(account.address);\n    } else {\n      alert(\"Please install Martian Wallet to connect.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Decentralized Voting Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), walletAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected Wallet: \", walletAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"SM6J6Jv3vxLi47+RieKFbfI3nq0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","checkForMartianWallet","window","martian","App","_s","walletAddress","setWalletAddress","connectWallet","account","connect","address","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anjal/voting-dapp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// Check if Martian Wallet is available\nconst checkForMartianWallet = () => {\n    return !!window.martian;\n};\n\nconst App = () => {\n    const [walletAddress, setWalletAddress] = useState('');\n\n    const connectWallet = async () => {\n        if (checkForMartianWallet()) {\n            const account = await window.martian.connect();\n            setWalletAddress(account.address);\n        } else {\n            alert(\"Please install Martian Wallet to connect.\");\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Decentralized Voting Platform</h1>\n            <button onClick={connectWallet}>Connect Wallet</button>\n            {walletAddress && <p>Connected Wallet: {walletAddress}</p>}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAChC,OAAO,CAAC,CAACC,MAAM,CAACC,OAAO;AAC3B,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIP,qBAAqB,CAAC,CAAC,EAAE;MACzB,MAAMQ,OAAO,GAAG,MAAMP,MAAM,CAACC,OAAO,CAACO,OAAO,CAAC,CAAC;MAC9CH,gBAAgB,CAACE,OAAO,CAACE,OAAO,CAAC;IACrC,CAAC,MAAM;MACHC,KAAK,CAAC,2CAA2C,CAAC;IACtD;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBd,OAAA;MAAAc,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtClB,OAAA;MAAQmB,OAAO,EAAEX,aAAc;MAAAM,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtDZ,aAAa,iBAAIN,OAAA;MAAAc,QAAA,GAAG,oBAAkB,EAACR,aAAa;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEd,CAAC;AAACb,EAAA,CAnBID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAqBT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}